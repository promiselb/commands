
	// Kickcmd = &Command{ // 12
	// 	name:        "exe_kick",
	// 	value:       "Alex kicked",
	// 	description: "Kicks all users mentioned. \n$exe_kick <@user[1]>...<@user[n]>",
	// }

	// UnBancmd = &Command{ // 13
	// 	name:        CommandPrefix + "exe_unban",
	// 	value:       "Alex removed ban for",
	// 	description: "Removes a user ban from a server. \n$exe_unban <username>",
	// }

	// Bancmd = &Command{ // 14
	// 	name:        CommandPrefix + "exe_ban",
	// 	value:       "Alex banned",
	// 	description: "Ban all users mentioned. \n$exe_ban <@user[1]>...<@user[n]>",
	// }

	// AddRolecmd = &Command{ // 15
	// 	name:        CommandPrefix + "role_add",
	// 	value:       "Alex added role to",
	// 	description: "Adds the rule to mentioned users. \n$role_add <@role> <@user[1]>...<@user[n]>",
	// }

	// DeleteRolecmd = &Command{ // 16
	// 	name:        CommandPrefix + "role_del",
	// 	value:       "Alex removed role from",
	// 	description: "Removes the role from mentioned users. \n$role_del <@role> <@user[1]>...<@user[n]",
	// }

	// MuteTextcmd = &Command{ // 17
	// 	name:        CommandPrefix + "mute",
	// 	value:       ` \(°×°)/ `,
	// 	description: "Mutes all users mentioned of a guild. \n$mute <@user[1]>...<@user[n]>",
	// }

	// UnMuteTextcmd = &Command{ // 18
	// 	name:        CommandPrefix + "unmute",
	// 	value:       ` \(°o°)/ `,
	// 	description: "Unmutes all users mentioned of a guild. \n$unmute <@user[1]>...<@user[n]>",
	// }

	// SoftBancmd = &Command{ // 19
	// 	name:        CommandPrefix + "exe_softban",
	// 	value:       "Alex soft-banned",
	// 	description: "Soft-banes all users mentioned of a guild (Kick the users and delete all thier messages). \n$exe_softban <@user[1]>...<@user[n]>",
	// }

    
// func SplitArgs(s string) []string {

// 	var sglobal []string

// 	s = strings.Replace(s, " ", "", -1)

// 	for i := 0; i < len(s); i++ {
// 		ss := string(s[i])
// 		if ss == "e" {
// 			sglobal = append(sglobal, s[:i+1])
// 		}
// 		if ss == "<" {
// 			sglobal = append(sglobal, s[i:i+3])
// 		}
// 	}
// 	return sglobal
// }

// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},
	// {},